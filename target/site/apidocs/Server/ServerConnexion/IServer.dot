#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// Server.ServerConnexion.IServer
	c1423 [label=<<table title="Server.ServerConnexion.IServer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./IServer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IServer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + specifyPort(port : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + startServer() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + disconnectServer() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getClients() : ConcurrentHashMap&lt;Integer, ClientInfos&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + createRoom(client : ClientInfos) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./IServer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Server.ServerConnexion.KryonetServer
	c1424 [label=<<table title="Server.ServerConnexion.KryonetServer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./KryonetServer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> KryonetServer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + KryonetServer(port : int) </td></tr>
<tr><td align="left" balign="left"> + specifyPort(port : int) </td></tr>
<tr><td align="left" balign="left"> + startServer() </td></tr>
<tr><td align="left" balign="left"> + disconnectServer() </td></tr>
<tr><td align="left" balign="left"> + getClients() : ConcurrentHashMap&lt;Integer, ClientInfos&gt; </td></tr>
<tr><td align="left" balign="left"> + createRoom(client : ClientInfos) </td></tr>
<tr><td align="left" balign="left"> + getServer() : Server </td></tr>
<tr><td align="left" balign="left"> + getRoom(roomId : int) : Room </td></tr>
<tr><td align="left" balign="left"> + getRooms() : ConcurrentHashMap&lt;Integer, Room&gt; </td></tr>
<tr><td align="left" balign="left"> + getClient(id : int) : ClientInfos </td></tr>
<tr><td align="left" balign="left"> + debugServer() </td></tr>
		</table></td></tr>
		</table>>, URL="./KryonetServer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//Server.ServerConnexion.KryonetServer implements Server.ServerConnexion.IServer
	c1423:p -> c1424:p [dir=back,arrowtail=empty,style=dashed];
}

