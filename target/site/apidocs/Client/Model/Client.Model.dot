#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// Client.Model.AModel
	c234 [label=<<table title="Client.Model.AModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AModel </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AModel() </td></tr>
		</table></td></tr>
		</table>>, URL="./AModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Client.Model.CardPrintable
	c235 [label=<<table title="Client.Model.CardPrintable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CardPrintable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CardPrintable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CardPrintable() </td></tr>
<tr><td align="left" balign="left"> + getCardsColor() : HashMap&lt;Color, String&gt; </td></tr>
<tr><td align="left" balign="left"> + setCardsColor(cardsColor : HashMap&lt;Color, String&gt;) </td></tr>
<tr><td align="left" balign="left"> + getCardsTrump() : HashMap&lt;Trump, String&gt; </td></tr>
<tr><td align="left" balign="left"> + getcardsNbr() : HashMap&lt;Integer, String&gt; </td></tr>
<tr><td align="left" balign="left"> + setCardsNbr(cards : HashMap&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getCardIsPlayable() : HashMap&lt;Boolean, String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./CardPrintable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Client.Model.Other
	c236 [label=<<table title="Client.Model.Other" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Other.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Other </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Other(id : int) </td></tr>
<tr><td align="left" balign="left"> + getId() : int </td></tr>
<tr><td align="left" balign="left"> + setId(id : int) </td></tr>
<tr><td align="left" balign="left"> + getNbCards() : int </td></tr>
<tr><td align="left" balign="left"> + setNbCards(nbCards : int) </td></tr>
<tr><td align="left" balign="left"> + isReady() : ReadyState </td></tr>
<tr><td align="left" balign="left"> + setReady(ready : ReadyState) </td></tr>
		</table></td></tr>
		</table>>, URL="./Other.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Client.Model.RoomListModel
	c237 [label=<<table title="Client.Model.RoomListModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RoomListModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RoomListModel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RoomListModel() </td></tr>
<tr><td align="left" balign="left"> + getRooms() : HashMap&lt;Integer, RoomInfo&gt; </td></tr>
<tr><td align="left" balign="left"> + setRooms(rooms : HashMap&lt;Integer, RoomInfo&gt;) </td></tr>
<tr><td align="left" balign="left"> + addRoom(room : RoomInfo) </td></tr>
<tr><td align="left" balign="left"> + removeRoom(id : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./RoomListModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Client.Model.Score
	c238 [label=<<table title="Client.Model.Score" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Score.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Score </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Score(a : int, b : int) </td></tr>
<tr><td align="left" balign="left"> + Score() </td></tr>
<tr><td align="left" balign="left"> + get_scoreA() : int </td></tr>
<tr><td align="left" balign="left"> + set_scoreA(scoreA : int) </td></tr>
<tr><td align="left" balign="left"> + get_scoreB() : int </td></tr>
<tr><td align="left" balign="left"> + set_scoreB(scoreB : int) </td></tr>
		</table></td></tr>
		</table>>, URL="./Score.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Client.Model.ReadyState
	c239 [label=<<table title="Client.Model.ReadyState" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ReadyState.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> ReadyState </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> INVISIBLE </td></tr>
<tr><td align="left" balign="left"> UNCLICKABLE </td></tr>
<tr><td align="left" balign="left"> CLICKABLE </td></tr>
		</table></td></tr>
		</table>>, URL="./ReadyState.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Client.Model.InstanceModel
	c240 [label=<<table title="Client.Model.InstanceModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./InstanceModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InstanceModel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InstanceModel(player : Player, room : RoomInfo) </td></tr>
<tr><td align="left" balign="left"> + InstanceModel(call : PlayerCallResponse, handCards : HashMap&lt;Integer, Card&gt;, tableCards : HashMap&lt;Integer, Card&gt;, first : Card) </td></tr>
<tr><td align="left" balign="left"> + InstanceModel() </td></tr>
<tr><td align="left" balign="left"> + getCall() : PlayerCallResponse </td></tr>
<tr><td align="left" balign="left"> + setCall(call : PlayerCallResponse) </td></tr>
<tr><td align="left" balign="left"> + getIsMyTurnCall() : boolean </td></tr>
<tr><td align="left" balign="left"> + setIsMyTurnCall(isMyTurnCall : boolean) </td></tr>
<tr><td align="left" balign="left"> + getReadyState() : ReadyState </td></tr>
<tr><td align="left" balign="left"> + setReadyState(state : ReadyState) </td></tr>
<tr><td align="left" balign="left"> + getTeam() : int </td></tr>
<tr><td align="left" balign="left"> + setTeam(team : int) </td></tr>
<tr><td align="left" balign="left"> + getRoom() : RoomInfo </td></tr>
<tr><td align="left" balign="left"> + setRoom(room : RoomInfo) </td></tr>
<tr><td align="left" balign="left"> + getHandCards() : HashMap&lt;Integer, Card&gt; </td></tr>
<tr><td align="left" balign="left"> + addHandCards(card : Card) </td></tr>
<tr><td align="left" balign="left"> + removeHandCard(card : Card) </td></tr>
<tr><td align="left" balign="left"> + getTableCards() : HashMap&lt;Integer, Card&gt; </td></tr>
<tr><td align="left" balign="left"> + addTableCards(card : Card) </td></tr>
<tr><td align="left" balign="left"> + isMyTurn() : boolean </td></tr>
<tr><td align="left" balign="left"> + setIsMyTurn(isMyTurnPlay : boolean) </td></tr>
<tr><td align="left" balign="left"> + getScore() : Score </td></tr>
<tr><td align="left" balign="left"> + setScore(score : Score) </td></tr>
<tr><td align="left" balign="left"> + addPlayer(id : int) </td></tr>
<tr><td align="left" balign="left"> + removePlayer(id : int) </td></tr>
<tr><td align="left" balign="left"> + otherCardDistibuted(id : int) </td></tr>
<tr><td align="left" balign="left"> + othersCardPlayed(id : int, card : Card) </td></tr>
<tr><td align="left" balign="left"> + playerCardPlayed(card : Card) </td></tr>
<tr><td align="left" balign="left"> + setOtherReadyState(player : Player, state : ReadyState) </td></tr>
<tr><td align="left" balign="left"> + setOthersReadyState(state : ReadyState) </td></tr>
<tr><td align="left" balign="left"> + cardPlayed(player : Player, card : Card) </td></tr>
<tr><td align="left" balign="left"> + setReadyClickable() </td></tr>
<tr><td align="left" balign="left"> + setReadyUnclickable(player : Player) </td></tr>
<tr><td align="left" balign="left"> + setReadyInvisible() </td></tr>
<tr><td align="left" balign="left"> + announceCall(call : PlayerCallResponse) </td></tr>
<tr><td align="left" balign="left"> + getFirstCardPlayed() : Card </td></tr>
<tr><td align="left" balign="left"> + setOtherCardToZero() </td></tr>
<tr><td align="left" balign="left"> + clearAllCards() </td></tr>
<tr><td align="left" balign="left"> + resetInstance() </td></tr>
<tr><td align="left" balign="left"> + turnOver(turnOver : TurnOver) </td></tr>
<tr><td align="left" balign="left"> + teamAttribution(teamAttribution : TeamAttribution) </td></tr>
		</table></td></tr>
		</table>>, URL="./InstanceModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//Client.Model.RoomListModel extends Client.Model.AModel
	c234:p -> c237:p [dir=back,arrowtail=empty];
	//Client.Model.InstanceModel extends Client.Model.AModel
	c234:p -> c240:p [dir=back,arrowtail=empty];
}

